// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"time"

	"github.com/yc-alpha/admin/app/user_management/internal/data/ent/schema"
	"github.com/yc-alpha/admin/app/user_management/internal/data/ent/sysuser"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	sysuserHooks := schema.SysUser{}.Hooks()
	sysuser.Hooks[0] = sysuserHooks[0]
	sysuserFields := schema.SysUser{}.Fields()
	_ = sysuserFields
	// sysuserDescUsername is the schema descriptor for username field.
	sysuserDescUsername := sysuserFields[1].Descriptor()
	// sysuser.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	sysuser.UsernameValidator = func() func(string) error {
		validators := sysuserDescUsername.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(username string) error {
			for _, fn := range fns {
				if err := fn(username); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// sysuserDescEmail is the schema descriptor for email field.
	sysuserDescEmail := sysuserFields[2].Descriptor()
	// sysuser.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	sysuser.EmailValidator = func() func(string) error {
		validators := sysuserDescEmail.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(email string) error {
			for _, fn := range fns {
				if err := fn(email); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// sysuserDescPhone is the schema descriptor for phone field.
	sysuserDescPhone := sysuserFields[3].Descriptor()
	// sysuser.PhoneValidator is a validator for the "phone" field. It is called by the builders before save.
	sysuser.PhoneValidator = func() func(string) error {
		validators := sysuserDescPhone.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
			validators[2].(func(string) error),
		}
		return func(phone string) error {
			for _, fn := range fns {
				if err := fn(phone); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// sysuserDescPassword is the schema descriptor for password field.
	sysuserDescPassword := sysuserFields[4].Descriptor()
	// sysuser.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	sysuser.PasswordValidator = sysuserDescPassword.Validators[0].(func(string) error)
	// sysuserDescLanguage is the schema descriptor for language field.
	sysuserDescLanguage := sysuserFields[9].Descriptor()
	// sysuser.DefaultLanguage holds the default value on creation for the language field.
	sysuser.DefaultLanguage = sysuserDescLanguage.Default.(string)
	// sysuser.LanguageValidator is a validator for the "language" field. It is called by the builders before save.
	sysuser.LanguageValidator = sysuserDescLanguage.Validators[0].(func(string) error)
	// sysuserDescTimezone is the schema descriptor for timezone field.
	sysuserDescTimezone := sysuserFields[10].Descriptor()
	// sysuser.DefaultTimezone holds the default value on creation for the timezone field.
	sysuser.DefaultTimezone = sysuserDescTimezone.Default.(string)
	// sysuser.TimezoneValidator is a validator for the "timezone" field. It is called by the builders before save.
	sysuser.TimezoneValidator = sysuserDescTimezone.Validators[0].(func(string) error)
	// sysuserDescCreatedAt is the schema descriptor for created_at field.
	sysuserDescCreatedAt := sysuserFields[15].Descriptor()
	// sysuser.DefaultCreatedAt holds the default value on creation for the created_at field.
	sysuser.DefaultCreatedAt = sysuserDescCreatedAt.Default.(func() time.Time)
	// sysuserDescUpdatedAt is the schema descriptor for updated_at field.
	sysuserDescUpdatedAt := sysuserFields[16].Descriptor()
	// sysuser.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	sysuser.DefaultUpdatedAt = sysuserDescUpdatedAt.Default.(func() time.Time)
	// sysuser.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	sysuser.UpdateDefaultUpdatedAt = sysuserDescUpdatedAt.UpdateDefault.(func() time.Time)
	// sysuserDescID is the schema descriptor for id field.
	sysuserDescID := sysuserFields[0].Descriptor()
	// sysuser.DefaultID holds the default value on creation for the id field.
	sysuser.DefaultID = sysuserDescID.Default.(func() int64)
}

const (
	Version = "v0.14.4"                                         // Version of ent codegen.
	Sum     = "h1:/DhDraSLXIkBhyiVoJeSshr4ZYi7femzhj6/TckzZuI=" // Sum of ent codegen.
)
